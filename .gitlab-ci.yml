.docker_job_template: &dind_job
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

stages:
  - build
  - test
  - release
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  COMMIT_IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  LATEST_IMAGE_TAG: $CI_REGISTRY_IMAGE:latest

build_image:
  <<: *dind_job
  stage: build
  script:
    - docker build --pull -t $COMMIT_IMAGE_TAG .
    - docker push $COMMIT_IMAGE_TAG
    - echo $CI_ENVIRONMENT_SLUG
  environment:
    name: $CI_PROJECT_NAME

unittest1:
  <<: *dind_job
  stage: test
  script:
    - docker pull $COMMIT_IMAGE_TAG
    - docker run --rm -e "MODE=TEST1" $COMMIT_IMAGE_TAG

unittest2:
  <<: *dind_job
  stage: test
  script:
    - docker pull $COMMIT_IMAGE_TAG
    - docker run --rm -e "MODE=TEST2" $COMMIT_IMAGE_TAG

release-image:
  <<: *dind_job
  stage: release
  script:
    - docker pull $COMMIT_IMAGE_TAG
    - docker tag $COMMIT_IMAGE_TAG $LATEST_IMAGE_TAG
    - docker push $LATEST_IMAGE_TAG
  only:
    - master

deploy-to-kubernetes:
  image: lapee79/kubectl-xenial:1.6.5
  stage: deploy
  before_script:
   - kubectl config set-cluster "$CI_PROJECT_ID" --server="$KUBE_URL" --certificate-authority="$KUBE_CA_PEM_FILE"
   - kubectl config set-credentials "$CI_PROJECT_ID" --token="$KUBE_TOKEN"
   - kubectl config set-context "$CI_PROJECT_ID" --cluster="$CI_PROJECT_ID" --user="$CI_PROJECT_ID" --namespace="$KUBE_NAMESPACE"
   - kubectl config use-context "$CI_PROJECT_ID"
  script:
    - echo $KUBE_URL
    - echo $KUBE_TOKEN
    - echo $KUBE_NAMESPACE
    - ls -l
  only:
    - master
  when: manual